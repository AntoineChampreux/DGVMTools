#!/usr/bin/Rscript

######################################
###
###         ©©©©©©©©©©©©©
###       ©©©©©©©©©©©©©©©©©
###      ©©©             ©©©
###     ©©©   ©©©©©©©©    ©©©
###    ©©©   ©©       ©©   ©©©
###   ©©©   ©©         ©©   ©©©
###   ©©©               ©©  ©©©
###   ©©©               ©©  ©©©
###   ©©©               ©©  ©©©
###   ©©©   ©©         ©©   ©©©
###    ©©©   ©©       ©©   ©©©
###     ©©©    ©©©©©©©    ©©© 
###      ©©©             ©©©   
###       ©©©©©©©©©©©©©©©©© 
###         ©©©©©©©©©©©©©  
###
###  COPYLEFT:  ALL RIGHTS REVERSED
###
#####################################

require("raster")


readMODISTreecover <- function(first.year = 2000, last.year = 2010) {

		   # if we want the whole time period, here it is
		   if(first.year == 2000 & last.year == 2010){
		   		 return(raster(modis.treecover.2000_2010)/100)
		   
		   }

		   # else average between certain years
		   else{
		   all.years <- brick()
		   for(year in first.year:last.year){
		   	    all.years <- addLayer(all.years, raster(paste(modis.treecover.each.year, year, ".nc", sep = "")))
		   }

		  return(calc(all.years, mean)/100)

		   }




}


benchmarkVsMODISTreecover<-function(model.raster, model.name="LPJ-GUESS", run = run, doScatterPlots = TRUE, doHistoPlots = TRUE){

	 dataset.id <- "MODISTreecover"
	 diff.breaks <- seq(-2, 2, 0.05)
	 plot.range <- c(-1,1.5)
	 MODISTreecover.period <- c(start = 2000, end = 2010) 
	 original.data <- readMODISTreecover()	 
	 full.correction.data <- readNaturalLandCoverGC2005()

   	 # crop all rasters to the same size
	 common.extent <- intersect(model.raster, original.data)
	 model.raster <- crop(model.raster, common.extent)
	 data.raster <- crop(original.data, common.extent)
	 correction.raster <- crop(full.correction.data, common.extent)

	 # Land use correction
         model.raster <- model.raster * correction.raster

	 # Do the generic analysis	 
	 comparison.results <- compareTwoRasters(data.raster, model.raster,  dataset.id, model.name, diff.breaks = diff.breaks, plot.range = plot.range,  doScatterPlots=doScatterPlots, doHistoPlots=doHistoPlots, run = run, period = MODISTreecover.period, quant = getVegQuantity("fpc"))				

	 rm(original.data, full.correction.data, common.extent, model.raster, data.raster,  correction.raster )

	 return(comparison.results)

}