% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes.R, R/Format-DGVMData.R,
%   R/Format-FireMIP.R, R/Format-GUESS.R, R/Format-aDGVM.R
\docType{class}
\name{Format-class}
\alias{Format-class}
\alias{DGVMData}
\alias{FireMIP}
\alias{LPJ_GUESS_SPITFIRE_FireMIP}
\alias{LPJ_GUESS_GlobFIRM_FireMIP}
\alias{LPJ_GUESS_SIMFIRE_BLAZE_FireMIP}
\alias{CTEM_FireMIP}
\alias{Inferno_FireMIP}
\alias{JSBACH_FireMIP}
\alias{ORCHIDEE_FireMIP}
\alias{MC2_FireMIP}
\alias{GUESS}
\alias{aDGVM}
\title{Format class}
\format{A \code{Quantity} object is an S4 class.}
\usage{
DGVMData

FireMIP

LPJ_GUESS_SPITFIRE_FireMIP

LPJ_GUESS_GlobFIRM_FireMIP

LPJ_GUESS_SIMFIRE_BLAZE_FireMIP

CTEM_FireMIP

Inferno_FireMIP

JSBACH_FireMIP

ORCHIDEE_FireMIP

MC2_FireMIP

GUESS

aDGVM
}
\description{
This class encapsulates all the specific details of a supported model or dataset.  It stores meta-data and methods (just functions, not technically
 methods in R terms) for a DGVM output format (or other data format).  Note that the default.pfts and  'quantities' arguments are just default 
 values, it is easy to add new ones.  Equally they don't all need to to be available for a particular run or dataset.  You can define your own for your 
 own data format if you, for example, want to include a new model type.    
 Format objects which are  included in the package by default are listed below:

\code{DGVMData} - a format defined here to unify the multitude of different datasets into a common format.  It is essentially CF-compliant netCDF with a couple of extra attributes defined. 
Can be produced using the companion DGVMData package.

\code{FireMIP} - a Format for reading 'standard' FireMIP model output

\code{LPJ_GUESS_SPITFIRE_FireMIP} - a Format for reading LPJ-GUESS-SPITFIRE FireMIP model output

\code{LPJ_GUESS_GlobFIRM_FireMIP} - a Format for reading LPJ-GUESS-GlobFIRM FireMIP model output

\code{LPJ_GUESS_SIMFIRE_BLAZE_FireMIP} - a Format for reading LPJ-GUESS-SIMFIRE-BLAZE FireMIP model output

\code{CTEM_FireMIP} - a Format for reading CLASS-CTEM FireMIP model output

\code{Inferno_FireMIP} - a Format for reading Inferno FireMIP model output

\code{JSBACH_FireMIP} - a Format for reading JSBACH FireMIP model output

\code{ORCHIDEE_FireMIP} - a Format for reading ORCHIDEE FireMIP model output

\code{MC2_FireMIP} - a Format for reading MC2 FireMIP model output

\code{GUESS} - a Format for reading standard LPJ-GUESS(-SPITFIRE) model output

\code{aDGVM} - a Format for reading aDGVM2 model output
}
\details{
Normally a user won't need to deal with this class since it defines model/dataset spcific metadata and functions which should be defined once and then
'just work' (haha) in the future. If someone wants their model to be supported by DGVMTools then this is the object that needs to be defined correctly.
}
\section{Slots}{

\describe{
\item{\code{id}}{Simple character string to gave an uniquely identify this format}

\item{\code{default.pfts}}{'Standard' vegetation types (PFTs, Plant Functional Type) that this format uses, as a list of DGVMTools::PFT objects.
This is mostly likely applicable to formats decsribing DGVM output, but also for some data sets.  
This is just a default PFT set available for convenience, can be easily over-ridden when defining a Source object (see defineSource()).}

\item{\code{quantities}}{'Standard' quantities (as a list of DGVMTools::Quantity objects) which might be availably from the model output or dataset.}

\item{\code{determinePFTs}}{A function to determine which PFTs are present in a run or dataset.}

\item{\code{determineQuantities}}{A function to determine which quantities \emph{are actually available} from the model run or dataset.}

\item{\code{getField}}{A function to retrieve actually data from the model output or dataset.  This is likely to be a fairly complex function, and really depends on the specifics 
and idiosynchrasies of the model output format or dataset.}
}}

\author{
Matthew Forrest \email{matthew.forrest@senckenberg.de}
}
\keyword{datasets}
