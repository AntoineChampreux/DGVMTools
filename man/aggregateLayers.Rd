% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/veg-processing.R
\name{aggregateLayers}
\alias{aggregateLayers}
\title{Combine layers of a VegObject (or a data.table)}
\usage{
aggregateLayers(input, targets, method = NULL, PFT.data = NULL)
}
\arguments{
\item{input}{The VegObject for which to aggregate layers.}

\item{targets}{The new layers to produce}

\item{method}{The method to use to aggregate the layers ie. "mean" or "sum".  However, the most sensible option is leave it unspecified and use the default (see below)}

\item{PFT.data}{If calling the function on a data.table, it is neccessary to specify a PFT set here.  Normally this function will be called on  VegObject so it is not neccessary.}
}
\value{
A VegObject (or data.table) with the new layers added
}
\description{
This is very useful and important function.  It aggregates different layers 
of a VegObject according the the desired method (or a sensible default)
}
\details{
Whilst the \code{method} arguement can be specified for maximum flexibility, the recommended usage is not specify this arguement.
In this case, the function uses the default of the VegQuant object of the VegObject, which should be the sensible option.  
For example, per-PFT variables (such as lai or cmass) should typically be summed, 
but monthly variables (such as soil water content) should be average to calculate the seasonal means.

For convenience, both \code{targets}  will be expanded using \code{expandTargets}.
This allows all lifeforms totals in a VegObject to be calculated using a simple call such as

 \code{veg.obj <- aggregateLayers(veg.obj, c("lifeforms"))}
 
See documention of \code{expandTargets} for details.
}
\author{
Matthew Forrest \email{matthew.forrest@senckenberg.de}
}
\seealso{
expandsTargets getVegFractions
}

