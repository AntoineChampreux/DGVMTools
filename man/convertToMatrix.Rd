% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convertToMatrix.R
\name{convertToMatrix}
\alias{convertToMatrix}
\title{Convert a Field, DataObject or data.table to a matrix}
\usage{
convertToMatrix(input, Lons = NULL, Lats = NULL, gap.fill = TRUE, layer,
  tol = 1e-10)
}
\arguments{
\item{input}{The input data, either as a Field, DataObject or data.table}

\item{Lons}{A numeric vector of longitude value, used for gap-filling and ensuring that the longitudes are exactly what you want them to be.}

\item{Lats}{A numeric vector of latitude value, used for gap-filling and ensuring that the latitudes are exactly what you want them to be.}

\item{gap.fill}{Logical, if true use fill in missing longitide columns and latitudes rows using either the provide Lons and Lats, or by filling in spaces if the grid spacing is regular.}

\item{layer}{Character string specifying which layer from the input should be used to make the matrix}

\item{tol}{Numeric specifying how close the differences between adjacant latitudes/longitudes should be when determining ir they are evenly spaced or not.}
}
\value{
A matrix (2D array) of the data with the longitudes and latitudes recored as the column and row names
}
\description{
This function is useful for making a matrix of data (particularly for writing to disk as a netCDF file) whilst maintain the original longitudes and latitudes.  
The longitudes and latitudes are stored as the column and row names respectively. 
This is necessary because making a Raster objects converts unevenly spaced coordinates to evenly spaced ones.
}
\author{
Matthew Forrest \email{matthew.forrest@senckenberg.de}
}
