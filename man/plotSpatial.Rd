% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting-spatial.R
\name{plotSpatial}
\alias{plotSpatial}
\title{Plots a map from a temporally-averaged \code{ModelObject}, a data.table, a Raster* or a SpatialPixelsDataFrame.}
\usage{
plotSpatial(x, layers = NULL, expand.layers = TRUE, quant = NULL,
  period = NULL, run = NULL, PFT.set = lpj.global.PFTs, title = NULL,
  layout.objs = NULL, plot.labels = NULL, plot.bg.col = "transparent",
  useLongnames = FALSE, text.multiplier = 1, plot.extent = NULL,
  limit = FALSE, limits = NULL, override.cols = NULL,
  override.cuts = NULL, special = "none", maxpixels = 1e+06, ...)
}
\arguments{
\item{x}{The data to plot. Can be a ModelObject, data.table, a SpatialPixelsDataFrame or a Raster* object.}

\item{layers}{A list of strings specifying which layers to plot.  Defaults to all layers.}

\item{expand.layers}{A boolean, determines wether to expand the layers arguement.  See documentation for \code{expandLayers} for details.}

\item{quant}{A \code{Quantity} object describy the quantity to be plotted.  This provides an override \code{Quantity} when plotting a \code{ModelObject}
and is useful to specify metadata (colours, plot ranges, names, etc.) when plotting other objects.}

\item{period}{The time period (represented by a \code{TemporalExtent} object), used only for plot labels and filenames.
In the case of plotting a \code{ModelRun} object this is taken automatically from the object, but this provides an override.}

\item{run}{A \code{ModelRun} object from which to pull metadata.  Note that normally this information is stored in the \code{ModelObject}.}

\item{PFT.set}{A PFT set, necessary for expanding layers and plotting long names.  Normally taken from the \code{ModelObject}.}

\item{title}{A character string to override the default title.}

\item{layout.objs}{List of overlays (for example coastlines or rivers or statistical values) or other objects to be plotted by \code{spplot} 
so see there for how to build them.}

\item{plot.labels}{List of character strings to be used as panel labels for summary plots and titles for the individual plots.
Sensible titles will be constructed if this is not specified.}

\item{plot.bg.col}{Colour string for the plot background.}

\item{useLongnames}{Boolean, if TRUE replace PFT IDs with the PFT's full names on the plots.}

\item{text.multiplier}{A number specifying an overall multiplier for the text on the plot.
Make it bigger if the text is too small on large plots and vice-versa}

\item{plot.extent}{An extent object to limit the plot area.}

\item{limit}{Boolean, whether or not to limit the plotted values between a range, either the limits argument below,
or the range of the plot.}

\item{limits}{A numeric vector with two members (lower and upper limit) to limit the plotted values}

\item{override.cols}{A colour palette function to override the defaults}

\item{override.cuts}{Cut ranges (a numeric vector) to override the defaults.}

\item{special}{A character string to indicate certain "special modes" which modifies the behaviour of the function a bit.
Special modes are currectly "fraction", "difference", "percentage.difference", "firert" (fire return time) and "dominant.pft".}

\item{maxpixels}{Maximum number of pixels to plot (see \code{raster} version of \code{spplot})}

\item{...}{Extra arguments to be be passed to \code{spplot} and therefore also to \code{lattice::levelplot}.}
}
\value{
Returns a plot object (from spplot)
}
\description{
This is a heavy lifting function for plotting models variables with flexibly, but with a high degree of automation. It's main use is to plot a map from a \code{ModelObject} or a \code{DataObject}, although plotting a Raster* is also useful.
It has a really large amount of parameters for a huge amount of flexibility.  However they are all set to sensible defaults,
so that in the case of plotting a \code{ModelObject} all you *need* to supply is the data itself, everything else is either set to a sensible default,
or provided by the \code{ModelObject} itself.  It is basically a very complex wrapper for spplot, and can automatically plot things like biomes, dominant PFTs, months of maximum values, 
burnt fraction on an approximately logarithic scale etc.  It returns a plot, which will need to be displayed using a \code{print()} command.
}
\details{
This function is heavily used by the benchmarking functions and can be very useful to the user for making quick plots
in standard benchmarking and post-processing.  It is also highly customisable for final results plots for papers and so on.
However, the \code{plotGGSpatial} function makes pretty plots with a simpler syntax, but with less flexibility.

The function works best for \code{ModelObjects} (which contain a lot of useful metadata).
}
\author{
Matthew Forrest \email{matthew.forrest@senckenberg.de}
}
\seealso{
\code{plotGGSpatial}, \code{expandLayers}, \code{sp::spplot}, \code{latice::levelplot}
}

