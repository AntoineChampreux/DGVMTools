% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/veg-plotting.R
\name{plotVegMaps}
\alias{plotVegMaps}
\title{Plots a map from a temporally-averaged \code{VegObject}, a data.table, a Raster* or a SpatialPixelsDataFrame.}
\usage{
plotVegMaps(data, targets = NULL, expand.targets = TRUE, quant = NULL,
  period = NULL, doSummary = TRUE, doIndividual = FALSE, run = NULL,
  PFT.set = global.PFTs, plot.dir = NULL, summary.file.name = NULL,
  summary.title = NULL, special.string = NULL, layout.objs = NULL,
  plot.labels = NULL, plot.bg.col = "transparent", useLongnames = FALSE,
  Cairo.units = "px", Cairo.dpi = 72, Cairo.type = "png",
  Cairo.width = 1800, Cairo.height = 1000, Cairo.bg = "transparent",
  text.multiplier = 1, plot.extent = NULL, limit = FALSE, limits = NULL,
  override.cols = NULL, override.cuts = NULL, special = NULL,
  maxpixels = 1e+06, ...)
}
\arguments{
\item{data}{The data to plot. Can be a VegObject, data.table, a SpatialPixelsDataFrame or a Raster* object.}

\item{targets}{A list of strings specifying which layers to plot.  Defaults to all layers.}

\item{expand.targets}{A boolean, determines wether to expand the targets arguement.  See documentation for \code{expandTargets} for details.}

\item{quant}{A \code{VegQuantity} object describy the quantity to be plotted.  This provides an override \code{VegQuant} when plotting a \code{VegObject}
and is useful to specify metadata (colours, plot ranges, names, etc.) when plotting other objects.}

\item{period}{The time period (represented by a \code{TemporalExtent} object), used only for plot labels and filenames.
In the case of plotting a \code{VegRun} object this is taken automatically from he object, but this provides an override.}

\item{doSummary}{Boolean, whether to plot all \code{targets} on one plot.}

\item{doIndividual}{Boolean, whether to plot all \code{targets} on individual plots.}

\item{run}{A \code{VegRun} object from which to pull metadata.  Note that normally this information is stored in the \code{VegObject}.}

\item{PFT.set}{A PFT set, necessary for exapnding targets and plotting long names.  Normally taken from the \code{VegObject}.}

\item{plot.dir}{A character string given the location for the plot to be saved. Usually the \code{run.dir} of the \code{VegObject}, but this provides an override.
If not a \code{VegObject} and not specified, this defaults to the current directory}

\item{summary.file.name}{A character string to override the file name of the summary plot (not including the path, just the filename).}

\item{summary.title}{A character string to override the title on the summary plot.}

\item{special.string}{A character string (no spaces) used in labels and titles to differentiate these plots from similar ones.
For example "Corrected" or "EuropeOnly"}

\item{layout.objs}{List of overlays (for example coastlines or rivers) or other objects to be plotted by \code{spplot} 
so see the there for how to build them.  Note that the \code{map.overlay} slot of the relevant \code{VegRun} object will be plotted automatically, 
so that need not be specified here.}

\item{plot.labels}{List of character strings to be used as panel labels for summary plots and titles for the individual plots.
Sensible titles will be constructed if this is not specified.}

\item{plot.bg.col}{Colour string for the plot background.}

\item{useLongnames}{Boolean, if TRUE replace PFT IDs with the PFT's full names on the plots.}

\item{Cairo.units}{The units to specify the canvas size, for the Cairo graphics function.
See \code{Cairo} documentation, but can generally be left at the default which is"px".}

\item{Cairo.dpi}{The dpi for the Cairo graphics function.
See \code{Cairo} documentation, but can generally be left at the default which is 72.}

\item{Cairo.type}{The file format for the plot.  Default is "png"
See \code{Cairo} documentation, change to "x11" for pop-up plots on GNU/linux, "win" for pop-up plots on Microsoft Windows.}

\item{Cairo.width}{Width of the plots (units specified in Cairo.units argument)}

\item{Cairo.height}{Height of the plots (units specified in Cairo.units argument)}

\item{Cairo.bg}{Colour string specifying the background colour of the whole plot.}

\item{text.multiplier}{A number specifying an overall multiplier for the text on the plot.
Make it bigger if the text is too small on large plots and vice-versa}

\item{plot.extent}{An extent object to limit the plot area.}

\item{limit}{Boolean, whether or not to limit the plotted values between a range, either the limits argument below,
or the range of the plot.}

\item{limits}{A numeric vector with two members (lower and upper limit) to limit the plotted values}

\item{override.cols}{A colour palette function to override the defaults}

\item{override.cuts}{Cut ranges (a numeric vector) to override the defaults.}

\item{special}{A character string to indicate certain "special modes" which modifies the behaviour of the function a bit.
Special modes are currectly "fraction", "difference", "percentage.difference" and "firert" (fire return time).
Biomes, dominant PFT and burnt area fraction should be added soon.}

\item{maxpixels}{Maximum number of pixels to plot (see \code{raster} version of \code{spplot})}

\item{...}{Extra arguments to be be passed to \code{spplot} and therefor also to \code{lattice::levelplot}.

This function is heavily used by the benchmarking functions and can be very useful to the user for making quick plots
in standard benchmarking and post-processing.  It is also highly customisable for final results plots for papers and so on.
However, the \code{plotGGSpatial} function makes pretty plots with a simpler syntax, but with less flexibility.

The function works best for \code{VegObjects} (which contain a lot of useful metadata).}
}
\value{
Nothing, just makes the plot
}
\description{
The primary use for this function in to plot a map from a \code{VegObject}, although plotting a Raster* is also useful.
It has a really large amount of parameters for a huge amount of flexibility.  However they are all set to sensible defaults,
so that in the case of plotting a \code{VegObject} all you *need* to supply is the data itself, everything else is eitehr set to a sensible default,
or provided by the \code{VegObject} itself.  Note that the default behaviour is to write a .png to the run directory of the \code{VegObject} or,
for other data types, the specified plot.dir (defaulting to the current working directory in no plot.dir is supplied).
}
\author{
Matthew Forrest \email{matthew.forrest@senckenberg.de}
}
\seealso{
\code{plotGGSpatial}, \code{expandTargets}, \code{sp::spplot}, \code{latice::levelplot}
}

